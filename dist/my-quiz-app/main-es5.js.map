{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/question-form/question-form.component.ts","webpack:///src/app/question-form/question-form.component.html","webpack:///src/app/questions.service.ts","webpack:///src/app/questions/questions.component.ts","webpack:///src/app/questions/questions.component.html","webpack:///src/app/quiz.model.ts","webpack:///src/app/results/results.component.ts","webpack:///src/app/results/results.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","appRoutes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","QuestionFormComponent","onChoiceMade","onChange","form","value","choice","question","correct","emit","valueChanges","subscribe","target","templateUrl","styleUrls","QuestionsService","http","get","pipe","result","trivia_categories","map","r","name","fileId","difficultyId","results","joinAnswers","correct_answer","incorrect_answers","push","sort","Math","random","providedIn","QuestionsComponent","route","questionsService","showResults","getQuestions","snapshot","params","quizId","questions","answers","currentIncorrect","currentQuestionIndex","values","a","toString","check","search","tempArr","questionName","label","choices","picked","replace","correctAnswer","incorrect","length","quiz","undefined","Choice","correctChoice","Question","Quiz","Answers","ResultsComponent","incorrectNum","WelcomeComponent","quizList","difficulty","getQuizzes","forEach","index","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\nimport { RouterModule, Routes} from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\n\nconst appRoutes: Routes = [\n  {path: 'welcome', component: WelcomeComponent },\n  {path: ':quizId/:difficultyId', component: QuestionsComponent },\n  {path: '', redirectTo: 'welcome', pathMatch: 'prefix'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    QuestionsComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    NgbModule,\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatCardModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Input, Output, OnInit} from '@angular/core';\nimport { FormControl, FormGroup} from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.css']\n})\n\nexport class QuestionFormComponent implements OnInit {\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n  form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n  select(e) {\n    this.form.value.choice = e.target.value;\n  }\n\n  onChange = () => {\n    if (this.form.value.choice === this.question.correct) {\n      this.onChoiceMade.emit(this.form.value.choice + [' correct']);\n    }\n    else {\n        this.onChoiceMade.emit(this.form.value.choice + [' incorrect']);\n    }\n  }\n\n}\n","<div class=\"quiz card\" *ngIf=\"question\">\n  <h3 class=\"card-title col p-3 text-center\" [innerHTML]=\"question.label\"></h3>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group p-3\">\n      <select class=\"form-control custom-select\" [value]=\"null\" size=\"{{question.choices.length}}\" formControlName=\"choice\" (change)=\"select($event)\" id=\"exampleFormControlSelect1\">\n        <option *ngFor=\"let choice of question.choices\" [innerHTML]=\"choice\"></option>\n      </select>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Quiz, Question} from './quiz.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(private http: HttpClient) { }\n  public getQuizzes() {\n    return this.http.get(`https://opentdb.com/api_category.php`).pipe(\n      map((result: any[]) => {\n        // @ts-ignore\n        return result.trivia_categories.map(r => new Quiz(r.id, r.name));\n      })\n    );\n  }\n\n  public getQuestions(fileId: number, difficultyId: string) {\n    return this.http.get(`https://opentdb.com/api.php?amount=10&category=${fileId}&difficulty=${difficultyId}`).pipe(\n      map((result: any[]) => {\n        // @ts-ignore\n        return result.results.map(r => new Question(r.question, this.joinAnswers(r), r.correct_answer)\n\n        );\n      })\n    );\n  }\n\n\n\n  joinAnswers(r) {\n    r.incorrect_answers.push(r.correct_answer);\n    r.incorrect_answers.sort(() => Math.random() - 0.5);\n    return r.incorrect_answers;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {switchMap} from 'rxjs/operators';\nimport { QuestionsService} from '../questions.service';\nimport {Quiz, Answers, Choice, Question} from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  answers: Answers;\n  quiz: Quiz;\n  currentQuestionIndex: number;\n  currentIncorrect: number;\n  questions: Question[];\n  showResults = false;\n\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) {\n\n  }\n  ngOnInit() {\n    this.questionsService.getQuestions(this.route.snapshot.params.quizId, this.route.snapshot.params.difficultyId).subscribe(questions => {\n      this.questions = questions;\n      this.answers = new Answers([], []);\n      this.currentIncorrect = 0;\n      this.currentQuestionIndex = 0;\n    });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    const a = this.answers.values[this.currentQuestionIndex].toString();\n    const check = a.search(' correct');\n\n    if (check === -1) {\n      const tempArr: any = {\n        questionName: this.questions[this.currentQuestionIndex].label,\n        choices: this.questions[this.currentQuestionIndex].choices,\n        picked: a.replace(' incorrect', ''),\n        correctAnswer: this.questions[this.currentQuestionIndex].correct\n      };\n      this.answers.incorrect[this.currentIncorrect] = tempArr;\n      this.currentIncorrect++;\n    }\n\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n    this.currentIncorrect = undefined;\n  }\n}\n","<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n<div class=\"quiz container mt-5\" *ngIf=\"questions\">\n  <div class=\"row\">\n    <div class=\"col mx-auto\">\n      <div class=\"questions\" *ngIf=\"!showResults\">\n        <app-question-form\n          [question]=\"questions[currentQuestionIndex]\"\n          (onChoiceMade)=\"updateChoice($event)\">\n        </app-question-form>\n\n        <button\n          class=\"btn btn-success mt-5 col-6 mx-auto d-block\"\n          (click)=\"nextOrViewResults()\"\n          [disabled]=\"!answers.values[currentQuestionIndex]\">\n          {{currentQuestionIndex === questions.length - 1 ? 'View Results' : 'Next'}}\n        </button>\n      </div>\n    </div>\n  </div>\n  <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</div>\n","import {Observable, ObservedValueOf} from 'rxjs';\n\nexport class Choice {\n  constructor(public value: string, public correctChoice: any) {}\n}\n\nexport class Question {\n  constructor(public label: string, public choices: Choice[], public correct: Choice['correctChoice']) {}\n}\n\nexport class Quiz {\n  constructor(public label: number, public name: string)\n  {}\n}\n\nexport class Answers {\n  constructor(public values: Choice[] = [], public incorrect: Choice['correctChoice']) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n\n  answersCheck(incorrectNum: number) {\n  if (incorrectNum === 0) {\n    return 'Wow WHAT A SUPERSTAR! You are truly a trivia master!';\n  }\n  if (incorrectNum <= 3) {\n    return 'Great job! Thats like a B- performance!';\n  }\n  if (incorrectNum <= 5) {\n    return 'Ehh.. Not too bad but also, Maybe try harder?';\n  }\n  if (incorrectNum >= 6)\n    return 'You should probably stick to your day job!!';\n  }\n}\n","<div class=\"container\">\n  <div class=\"results mx-auto\">\n    <h2 class=\"text-center\">You got {{answers.incorrect.length}} wrong!</h2>\n    <p class=\"text-center\" [innerText]=\"answersCheck(answers.incorrect.length)\"></p>\n    <div class=\"row justify-content-center\">\n      <div *ngFor=\"let b of answers.incorrect\">\n        <div class=\"card col\" style=\"width: 18rem; height: 100%\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" [innerHTML]=\"b['questionName']\"></h5>\n            <p class=\"card-text\">You picked:<span style=\"color: red\"> {{b[\"picked\"]}}</span>\n              <br>Correct Answer: <span style=\"color: green\">{{b[\"correctAnswer\"]}}</span></p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button class=\"row my-5 btn btn-dark d-block mx-auto\" style=\"width: 40%\" routerLink=\"/welcome\">Start Over!</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {QuestionsService} from '../questions.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  quizList = [];\n  difficulty = 'Easy';\n  constructor(private questionsService: QuestionsService) {\n    this.questionsService.getQuizzes().subscribe(r => {\n      r.forEach((value, index) => {\n        this.quizList.push(r[index]);\n      });\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"!quizList\" class=\"spinner-grow text-primary\"></div>\n<div *ngIf=\"quizList\" class=\"container\">\n  <h1 class=\"text-center mt-2\"> Trivia Time!</h1>\n  <p class=\"text-center mb-3\"> Pick a subject to get started!</p>\n  <small class=\"text-center d-block mb-2\">Difficulty</small>\n  <div class=\"row\">\n    <div class=\"col text-center mb-3\">\n      <div ngbDropdown class=\"d-inline-block\">\n        <button class=\"btn btn-dark\" id=\"dropdownBasic1\" ngbDropdownToggle>{{difficulty}}</button>\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n          <button ngbDropdownItem (click)=\"difficulty='Easy'\">Easy</button>\n          <button ngbDropdownItem (click)=\"difficulty='Medium'\">Medium</button>\n          <button ngbDropdownItem (click)=\"difficulty='Hard'\">Hard</button>\n        </div>\n      </div>\n    </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xs-12 mx-2\" *ngFor=\"let quizItem of quizList\">\n      <div class=\"mb-2 card\" style=\"width: 18rem; height: 10rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{quizItem.name}}</h5>\n        </div>\n        <div  class=\"card-footer\">\n          <button type=\"button\" routerLink=\"/{{quizItem.label}}/{{difficulty.toLowerCase()}}\" class=\"btn btn-dark d-block mx-auto\">\n            Start!\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}