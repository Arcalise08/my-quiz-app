{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/question-form/question-form.component.ts","./src/app/question-form/question-form.component.html","./src/app/questions.service.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/quiz.model.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\nimport { RouterModule, Routes} from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\n\nconst appRoutes: Routes = [\n  {path: 'welcome', component: WelcomeComponent },\n  {path: ':quizId/:difficultyId', component: QuestionsComponent },\n  {path: '', redirectTo: 'welcome', pathMatch: 'prefix'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    QuestionsComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    NgbModule,\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatCardModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Input, Output, OnInit} from '@angular/core';\nimport { FormControl, FormGroup} from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.css']\n})\n\nexport class QuestionFormComponent implements OnInit {\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n  form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n  select(e) {\n    this.form.value.choice = e.target.value;\n  }\n\n  onChange = () => {\n    if (this.form.value.choice === this.question.correct) {\n      this.onChoiceMade.emit(this.form.value.choice + [' correct']);\n    }\n    else {\n        this.onChoiceMade.emit(this.form.value.choice + [' incorrect']);\n    }\n  }\n\n}\n","<div class=\"quiz card\" *ngIf=\"question\">\n  <h3 class=\"card-title col p-3 text-center\" [innerHTML]=\"question.label\"></h3>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group p-3\">\n      <select class=\"form-control custom-select\" [value]=\"null\" size=\"{{question.choices.length}}\" formControlName=\"choice\" (change)=\"select($event)\" id=\"exampleFormControlSelect1\">\n        <option *ngFor=\"let choice of question.choices\" [innerHTML]=\"choice\"></option>\n      </select>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Quiz, Question} from './quiz.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(private http: HttpClient) { }\n  public getQuizzes() {\n    return this.http.get(`https://opentdb.com/api_category.php`).pipe(\n      map((result: any[]) => {\n        // @ts-ignore\n        return result.trivia_categories.map(r => new Quiz(r.id, r.name));\n      })\n    );\n  }\n\n  public getQuestions(fileId: number, difficultyId: string) {\n    return this.http.get(`https://opentdb.com/api.php?amount=10&category=${fileId}&difficulty=${difficultyId}`).pipe(\n      map((result: any[]) => {\n        // @ts-ignore\n        return result.results.map(r => new Question(r.question, this.joinAnswers(r), r.correct_answer)\n\n        );\n      })\n    );\n  }\n\n\n\n  joinAnswers(r) {\n    r.incorrect_answers.push(r.correct_answer);\n    r.incorrect_answers.sort(() => Math.random() - 0.5);\n    return r.incorrect_answers;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {switchMap} from 'rxjs/operators';\nimport { QuestionsService} from '../questions.service';\nimport {Quiz, Answers, Choice, Question} from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  answers: Answers;\n  quiz: Quiz;\n  currentQuestionIndex: number;\n  currentIncorrect: number;\n  questions: Question[];\n  showResults = false;\n\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) {\n\n  }\n  ngOnInit() {\n    this.questionsService.getQuestions(this.route.snapshot.params.quizId, this.route.snapshot.params.difficultyId).subscribe(questions => {\n      this.questions = questions;\n      this.answers = new Answers([], []);\n      this.currentIncorrect = 0;\n      this.currentQuestionIndex = 0;\n    });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    const a = this.answers.values[this.currentQuestionIndex].toString();\n    const check = a.search(' correct');\n\n    if (check === -1) {\n      const tempArr: any = {\n        questionName: this.questions[this.currentQuestionIndex].label,\n        choices: this.questions[this.currentQuestionIndex].choices,\n        picked: a.replace(' incorrect', ''),\n        correctAnswer: this.questions[this.currentQuestionIndex].correct\n      };\n      this.answers.incorrect[this.currentIncorrect] = tempArr;\n      this.currentIncorrect++;\n    }\n\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n    this.currentIncorrect = undefined;\n  }\n}\n","<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n<div class=\"quiz container mt-5\" *ngIf=\"questions\">\n  <div class=\"row\">\n    <div class=\"col mx-auto\">\n      <div class=\"questions\" *ngIf=\"!showResults\">\n        <app-question-form\n          [question]=\"questions[currentQuestionIndex]\"\n          (onChoiceMade)=\"updateChoice($event)\">\n        </app-question-form>\n\n        <button\n          class=\"btn btn-success mt-5 col-6 mx-auto d-block\"\n          (click)=\"nextOrViewResults()\"\n          [disabled]=\"!answers.values[currentQuestionIndex]\">\n          {{currentQuestionIndex === questions.length - 1 ? 'View Results' : 'Next'}}\n        </button>\n      </div>\n    </div>\n  </div>\n  <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</div>\n","import {Observable, ObservedValueOf} from 'rxjs';\n\nexport class Choice {\n  constructor(public value: string, public correctChoice: any) {}\n}\n\nexport class Question {\n  constructor(public label: string, public choices: Choice[], public correct: Choice['correctChoice']) {}\n}\n\nexport class Quiz {\n  constructor(public label: number, public name: string)\n  {}\n}\n\nexport class Answers {\n  constructor(public values: Choice[] = [], public incorrect: Choice['correctChoice']) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n\n  answersCheck(incorrectNum: number) {\n  if (incorrectNum === 0) {\n    return 'Wow WHAT A SUPERSTAR! You are truly a trivia master!';\n  }\n  if (incorrectNum <= 3) {\n    return 'Great job! Thats like a B- performance!';\n  }\n  if (incorrectNum <= 5) {\n    return 'Ehh.. Not too bad but also, Maybe try harder?';\n  }\n  if (incorrectNum >= 6)\n    return 'You should probably stick to your day job!!';\n  }\n}\n","<div class=\"container\">\n  <div class=\"results mx-auto\">\n    <h2 class=\"text-center\">You got {{answers.incorrect.length}} wrong!</h2>\n    <p class=\"text-center\" [innerText]=\"answersCheck(answers.incorrect.length)\"></p>\n    <div class=\"row justify-content-center\">\n      <div *ngFor=\"let b of answers.incorrect\">\n        <div class=\"card col\" style=\"width: 18rem; height: 100%\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" [innerHTML]=\"b['questionName']\"></h5>\n            <p class=\"card-text\">You picked:<span style=\"color: red\"> {{b[\"picked\"]}}</span>\n              <br>Correct Answer: <span style=\"color: green\">{{b[\"correctAnswer\"]}}</span></p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button class=\"row my-5 btn btn-dark d-block mx-auto\" style=\"width: 40%\" routerLink=\"/welcome\">Start Over!</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {QuestionsService} from '../questions.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  quizList = [];\n  difficulty = 'Easy';\n  constructor(private questionsService: QuestionsService) {\n    this.questionsService.getQuizzes().subscribe(r => {\n      r.forEach((value, index) => {\n        this.quizList.push(r[index]);\n      });\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"!quizList\" class=\"spinner-grow text-primary\"></div>\n<div *ngIf=\"quizList\" class=\"container\">\n  <h1 class=\"text-center mt-2\"> Trivia Time!</h1>\n  <p class=\"text-center mb-3\"> Pick a subject to get started!</p>\n  <small class=\"text-center d-block mb-2\">Difficulty</small>\n  <div class=\"row\">\n    <div class=\"col text-center mb-3\">\n      <div ngbDropdown class=\"d-inline-block\">\n        <button class=\"btn btn-dark\" id=\"dropdownBasic1\" ngbDropdownToggle>{{difficulty}}</button>\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n          <button ngbDropdownItem (click)=\"difficulty='Easy'\">Easy</button>\n          <button ngbDropdownItem (click)=\"difficulty='Medium'\">Medium</button>\n          <button ngbDropdownItem (click)=\"difficulty='Hard'\">Hard</button>\n        </div>\n      </div>\n    </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xs-12 mx-2\" *ngFor=\"let quizItem of quizList\">\n      <div class=\"mb-2 card\" style=\"width: 18rem; height: 10rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{quizItem.name}}</h5>\n        </div>\n        <div  class=\"card-footer\">\n          <button type=\"button\" routerLink=\"/{{quizItem.label}}/{{difficulty.toLowerCase()}}\" class=\"btn btn-dark d-block mx-auto\">\n            Start!\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}